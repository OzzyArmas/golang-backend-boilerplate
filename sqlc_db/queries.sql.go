// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: queries.sql

package sqlc_db

import (
	"context"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (user_name, phone_number)
    VALUES ($1, $2) 
    RETURNING user_id
`

type CreateUserParams struct {
	UserName    string
	PhoneNumber string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (string, error) {
	row := q.db.QueryRow(ctx, createUser, arg.UserName, arg.PhoneNumber)
	var user_id string
	err := row.Scan(&user_id)
	return user_id, err
}

const getUser = `-- name: GetUser :one
SELECT user_id, user_name, phone_number, created_at FROM users
    WHERE user_id = $1
`

func (q *Queries) GetUser(ctx context.Context, userID string) (User, error) {
	row := q.db.QueryRow(ctx, getUser, userID)
	var i User
	err := row.Scan(
		&i.UserID,
		&i.UserName,
		&i.PhoneNumber,
		&i.CreatedAt,
	)
	return i, err
}
